---
description: 设计接口测试时的规则，包括命名、用例设计和依赖隔离等
globs: 
alwaysApply: false
---
接口测试针对的是单个子系统对外提供的服务，确保覆盖其对外的契约和服务。

1. 目录与文件组织
- 所有接口测试文件统一放在 `tests/interface/` 目录下，结构与接口定义目录保持一致。
- 每个接口应一个测试文件，命名为：  `User_manager` → `test_user_manager.py`

2. 测试类与用例命名
- 每个接口类对应一个测试类，命名为：`Test<InterfaceClass>`  ，例如：`TestUserManager`
- 每个接口方法对应一组测试用例，命名为：   `test_<method>_<scenario>_should_<expected_behavior>`  ，例如：`test_create_user_with_invalid_email_should_raise_error`

3. 测试用例的内容与覆盖
- 每个接口方法必须有覆盖契约、正常流程、边界条件和异常场景的测试用例。
- 测试用例应覆盖接口定义中的所有类型契约，包括参数类型、返回值类型和数据结构约束。

4. 依赖注入与隔离
- 所有子系统应通过 container 进行实例化和依赖注入，禁止在测试中直接实例化接口实现类或手动拼装依赖，避免破坏依赖注入和可测试性
- 测试时必须通过 container 注入 mock、stub 或 fake 等依赖，确保测试环境的可控性、独立性和可重复性。
- 不得直接调用真实的数据库、外部服务等外部依赖，除了公共的基础服务


